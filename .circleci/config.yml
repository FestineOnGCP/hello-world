# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print-pipeline-id:
    description: This command will print the pipeline id to the console
    parameters:
      to:
        type: string
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID

executors:
  my-exec-env:
    docker:
      - image: circleci/node:13.8.0
    working_directory: /tmp

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  ## python: circleci/python@1.5.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  save-hello-world:
    executor: my-exec-env
    steps:
      - run: mkdir -p workspace # [{run: "mkdir -p workspace"}]
      - run:
          name: Save "Hello World to output.txt file"
          command: echo "Hello World" > workspace/output.txt
      - persist_to_workspace:
          root: workspace
          paths:
            - output.txt

  print-output-file:
    executor: my-exec-env
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          if [[ `cat /tmp/workspace/output.txt` == "Hello World" ]]; then
            echo "It worked";
          else
            echo "Failed to access workspace"; exit 1
          fi

  show-pipeline-id:
    executor: my-exec-env
    steps:
      - print-pipeline-id


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - save-hello-world
      - print-output-file:
          requires: 
            - save-hello-world
      - show-pipeline-id
